# Generated by Django 5.2.1 on 2025-06-06 16:15

import django.db.models.deletion
import integrations.utils
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CredentialsEntity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('uid', models.UUIDField(default=integrations.utils.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('handle', models.CharField(max_length=32, verbose_name='Identificador')),
                ('credentials_type_id', models.CharField(max_length=32, verbose_name='Tipo de Credencial')),
                ('credentials_type_data', models.JSONField(default=dict, verbose_name='Dados da Credencial')),
                ('credentials_type_private_data', models.JSONField(default=dict, verbose_name='Dados Privados')),
                ('is_active', models.BooleanField(default=False, verbose_name='Ativo?')),
                ('last_checked_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Última Verificação')),
                ('last_success_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Último Sucesso')),
                ('last_error_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Último Erro')),
                ('last_error', models.TextField(blank=True, editable=False, null=True, verbose_name='Última Mensagem de Erro')),
            ],
            options={
                'verbose_name': 'Credenciais',
                'verbose_name_plural': 'Credenciais',
                'unique_together': {('handle',)},
            },
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('uid', models.UUIDField(default=integrations.utils.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('handle', models.CharField(help_text='Identificador único para a integração, usado em URLs e referências.', max_length=32, unique=True, verbose_name='Identificador')),
                ('enable_logging', models.BooleanField(default=True, help_text='Habilita o registro de logs para depuração.', verbose_name='Habilitar Logging')),
                ('provider_backend_id', models.CharField(max_length=32, verbose_name='ID do Provedor Backend')),
                ('provider_backend_data', models.JSONField(default=dict, verbose_name='Dados do Backend do Provedor')),
                ('is_active', models.BooleanField(default=False, verbose_name='Ativo?')),
                ('credentials', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='integrations', to='integrations.credentialsentity')),
            ],
        ),
        migrations.CreateModel(
            name='ContextualEvent',
            fields=[
                ('uid', models.UUIDField(default=integrations.utils.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(default='desconhecido', max_length=100, verbose_name='Tipo do Evento')),
                ('event_date', models.DateField(blank=True, null=True, verbose_name='Data do Evento')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Localização do Evento')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cidade do Evento')),
                ('category', models.CharField(blank=True, max_length=100, null=True, verbose_name='Categoria do Evento')),
                ('extra_fields', models.JSONField(blank=True, default=dict, verbose_name='Atributos do Evento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('integration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='integrations.integration')),
            ],
        ),
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('uid', models.UUIDField(default=integrations.utils.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('success', models.BooleanField(default=False, verbose_name='Sucesso?')),
                ('error', models.BooleanField(default=False, verbose_name='Erro?')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Mensagem de Log')),
                ('method', models.CharField(choices=[('fetch', 'Fetch'), ('consume', 'Consume'), ('import', 'Import')], default='fetch', max_length=50, verbose_name='Método')),
                ('records_imported', models.PositiveIntegerField(default=0, verbose_name='Registros Importados')),
                ('request_data', models.JSONField(blank=True, default=dict, verbose_name='Dados da Requisição')),
                ('response_data', models.JSONField(blank=True, default=dict, verbose_name='Dados da Resposta')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Data e Hora')),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='integrations.integration', verbose_name='Integração')),
            ],
        ),
        migrations.CreateModel(
            name='ContextualData',
            fields=[
                ('uid', models.UUIDField(default=integrations.utils.get_uuid, editable=False, primary_key=True, serialize=False)),
                ('version', models.PositiveIntegerField(default=1, verbose_name='Versão')),
                ('fetched_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Coleta')),
                ('extra_fields', models.JSONField(blank=True, default=dict, verbose_name='Dados Contextuais')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contextual_data', to='integrations.contextualevent')),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contextual_data', to='integrations.integration')),
            ],
            options={
                'ordering': ['-fetched_at'],
                'unique_together': {('event', 'integration', 'version')},
            },
        ),
    ]
